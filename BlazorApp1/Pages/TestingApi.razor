@page "/TestingApi"

@using BlazorApp1.Models
@using Newtonsoft.Json
@inject HttpClient Http
@inject NavigationManager uriHelper;
@using System.Net
@using System.Net.Cache
@using System.Reflection.Metadata
<h3>TestingApi</h3>
@if (_userInfos == null)
{
    <p>
        <em>Looding...</em>
    </p>
}
else
{
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>FullName</th>
                <th>Login</th>
                <th>Password</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var element in _userInfos)
            {
                <tr>
                    <td>@_idElement</td>
                    <td>@element.FullName</td>
                    <td>@element.Login</td>
                    <td>@element.Password</td>
                </tr>
                ++_idElement;
            }
            </tbody>
        </table>
    </div> 
    <div class="col-sm-3">
        <div class="accordion-item">
            <div class="accordion-header">
                <button class="accordion-button" onclick="@Togle" style="background: forestgreen; color: black">
                    <b>Create new user</b>
                </button>
            </div>
            @if (ShouBold)
            {
                <div class="accordion-body">
                    <input type="text" placeholder="User name:" style="margin: 20px" @bind="_model.UserName">
                    <input type="text" placeholder="Login:" style="margin: 20px" @bind="_model.Login">
                    <input type="password" placeholder="Password:" style="margin: 20px" @bind="_model.Password">
                    <input type="number" placeholder="Role:" style="margin: 20px" @bind="_model.Role">
                    <button class="nav-button-test" style="background: limegreen; border-radius: 10px; border-color: darkgreen; vertical-align: center" onclick="@AddNewElement">
                        <p>+ Add ib database</p>
                    </button>
                </div>
            }
        </div>
    </div>
    <div class="col-sm-3">
        <div class="accordion-item">
            <div class="accordion-header">
                <button class="accordion-button">
                    <b>Delete</b>
                </button>
            </div>
            @*@if (ClickButton)
            {
                <div class="accordion-body">
                    <input type="text">
                </div>
            }*@
        </div>
    </div>
}
@code
{
    [Parameter] public bool ShouBold { get; set; } = false;
    private void Togle()
    {
        ShouBold = !ShouBold;
    }
}
@code
{
    private string? _login;
    private string? _password;
    private string? _userName;
    private string? _role;
    const string PathApi = "http://localhost:5110/api/Controller2";
    private int _idElement = 1;
    private List<UserInfo>? _userInfos;
    protected override async Task OnInitializedAsync()
    {
        using (var client = new HttpClient())
        {
            HttpResponseMessage requestMessage = await client.GetAsync($"{PathApi}/GetUserInfo");
            if (requestMessage.IsSuccessStatusCode)
            {
                string content = await requestMessage.Content.ReadAsStringAsync();
                _userInfos = JsonConvert.DeserializeObject<List<UserInfo>>(content)!.ToList();
            }
        }
    }
    private async Task AddNewElement()
    {
        using (var cont = new HttpClient())
        {
            _idElement = 1;
            _login = _model.Login;
            _password = _model.Password;
            _userName = _model.UserName;
            _role = _model.Role;
            HttpResponseMessage responseMessage = await cont.GetAsync($"{PathApi}/GetSave?nameUser={_login}&login={_password}&password={_userName}&role={_role}");
            if (responseMessage.IsSuccessStatusCode)
            {
                uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
            }
        }
    }
}
@code
{
    private static Model _model = new();
    private class Model
    {
        public string? Login { get; set; }
        public string Password { get; set; }
        public string UserName { get; set; }
        public string Role { get; set; }
    }
}
