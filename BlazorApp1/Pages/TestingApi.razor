@page "/TestingApi"

@using BlazorApp1.Models
@using Newtonsoft.Json
@inject HttpClient Http
@using System.Net
@using System.Net.Cache
@using System.Reflection.Metadata
<h3>TestingApi</h3>
@if (_userInfos == null)
{
    <p>
        <em>Looding...</em>
    </p>
}
else
{
    @(_idElement = 1)
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>FullName</th>
                <th>Login</th>
                <th>Password</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var element in _userInfos)
            {
                <tr>
                    <td>@_idElement</td>
                    <td>@element.FullName</td>
                    <td>@element.Login</td>
                    <td>@element.Password</td>
                </tr>
                ++_idElement;
            }
            </tbody>
        </table>
    </div>
    <div>
        <form method="post">
            <div style="display: flex; margin: 20px">
                <p style="width: 7rem;">Login:
                </p>
                <form method="post">
                    <input type="text" @bind="_model.Login" placeholder="Login:"/>
                </form>
            </div>
            <div style="display: flex; margin: 20px">
                <p style="width: 7rem">Password:
                </p>
                <input type="text" @bind="_model.Password" placeholder="Password:">
            </div>
            <div style="display: flex; margin: 20px">
                <p style="width: 7rem">UserName:
                </p>
                <input type="text" @bind="_model.UserName" placeholder="UserName:">
            </div>
            <div style="display: flex; margin: 20px">
                <p style="width: 7rem">Role:
                </p>
                <input type="number" @bind="_model.Role" placeholder="Role:">
            </div>
        </form>
    </div>
    <button class="butoon-create" style="background: limegreen; text-align: center; border-radius: 10px; border-color: darkgreen" onclick="@AddNewElement">+ Create new</button>
    <button onclick="" style="text-align: center; background: indianred; border-color: darkred; border-radius: 10px">- Drop</button>
    <p>@a</p>
    <p>@_login</p>
    <p>@_password</p>
    <p>@_userName</p>
    <p>@_role</p>
    
}
@code

{
    private string? a;
    private string _login = _model.Login;
    private string _password = _model.Password;
    private string _userName = _model.UserName;
    private string _role = _model.Role;
    const string PathApi = "http://localhost:5110/api/Controller2";
    private int _idElement = 1;
    private List<UserInfo>? _userInfos;

    protected override async Task OnInitializedAsync()
    {
        using (var client = new HttpClient())
        {
            HttpResponseMessage requestMessage = await client.GetAsync($"{PathApi}/GetUserInfo");
            if (requestMessage.IsSuccessStatusCode)
            {
                string content = await requestMessage.Content.ReadAsStringAsync();
                _userInfos = JsonConvert.DeserializeObject<List<UserInfo>>(content)!.ToList();
            }
        }
    }

    private async Task AddNewElement()
    {
        _login = _model.Login;
        _password = _model.Password;
        _userName = _model.UserName;
        _role = _model.Role;
        using (var cont = new HttpClient())
        {
            a = $"{PathApi}/GetSave?login={_login}&password={_password}&nameUser={_userName}&role={_role}";
            HttpResponseMessage responseMessage = await cont.GetAsync($"{PathApi}/GetSave?nameUser={_login}&login={_password}&password={_userName}&role={_role}");
            OnInitializedAsync();
        }
    }

}


@code
{
    private class Model
    {
        

        public string Login { get; set; }
        public string Password { get; set; }
        public string UserName { get; set; }
        public string Role { get; set; }
    }

    private static Model _model = new();
}
